#!/bin/bash
#
# Shows all Arch news in a browser.
# To show only "unseen" news, saves the date of the latest news flash you've seen
# and shows the news page only if there's more after that.

DIE() {
    echo "$progname: error: $1" >&2
    exit 1
}

Usage() {
    cat <<EOF >&2
Usage: $progname [options]
Options:
    -h | --help      This help.
    -u | --unread    "Unread" all Arch news.
EOF
}

Main() {
    local -r progname="${0##*/}"
    local -r latestfile="$HOME/.config/EOS-arch-news.conf"

    while [ -n "$1" ] ; do
        case "$1" in
            --help | -h)
                Usage; return ;;
            --unread | -u)
                rm -f "$latestfile"; return ;;
        esac
        shift
    done

    local -r latest_seen="$(cat "$latestfile" 2>/dev/null)"    # get the date of the latest visited news
    local -r url=https://archlinux.org/news
    local -r data=$(curl -Lsm 20 $url)

    [ -n "$data" ]  || DIE "sorry, cannot fetch Arch news. Please try again later."

    local -r bashlib=/usr/share/endeavouros/scripts/eos-script-lib-yad
    source $bashlib || DIE "failed to read file '$bashlib'."

    local dates=()
    readarray -t dates <<< $(echo "$data" | grep '^[ \t]*<td>[0-9-]*</td>$' | sed 's|^[ \t]*<td>\([0-9-]*\)</td>$|\1|')

    local -r latest=${dates[0]}

    if [[ "$latest" > "$latest_seen" ]] ; then
        local browser=$(eos_select_browser)            # find the default browser
        [ -n "$browser" ] || DIE "browser not found!"
        echo "$latest" > "$latestfile"                 # save the date of the latest news
        setsid "$browser" $url &> /dev/null
    fi
}

Main "$@"
