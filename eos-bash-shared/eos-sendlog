#!/bin/bash

echo2()   { echo "$@" >&2 ; }
printf2() { printf "$@" >&2 ; }

DIE() {
    echo2 "$progname: error: $1"
    if [ -z "$2" ] ; then
        exit 1
    else
        exit "$2"
    fi
}

Options() {
    local arg
    for arg in "$@" ; do
        case "$arg" in
            -h | --help)
                cat <<EOF
Directs standard input into a service at address
    $EOS_SENDLOG_URI
and saves returned URLs into file
    $db2
See file $configfile about how to configure the service address.

Usage: $progname [options]
options:
    -n | --nosave   Don't save returned URL.
    -h | --help     This help.
    --man           Show manual at $EOS_SENDLOG_URI.
    -v | --verbose  Show more info about the operation.
EOF
                exit 0
                ;;
            --man)
                xdg-open "$EOS_SENDLOG_URI"
                exit 0
                ;;
            -n | --nosave)
                save=no
                ;;
            -v | --verbose)
                verbose=yes
                ;;
#            -f=* | --file=*) inputfile="${arg#*=}" ;;
            -*) DIE "unsupported option '$arg'" ;;
            *) DIE "unsupported parameter '$arg'" ;;
        esac
    done
}

SendToNet1() {
    local ix="$1"
    [ -n "$ix" ] || return 1
    local srv="${supported_uris[$ix]}"
    local form="${supported_uris[$((ix+1))]}"
    [ -n "$srv" ] || return 1

    case "$form" in
        "") [ "$srv" != "wgetpaste" ] && return 1 ;;
    esac

    [ "$verbose" = "yes" ] && printf2 "==> $srv: "

    local exitcode=0
    local msgs=()
    local msg1="warning: sending data to"
    local msg2="failed with code "

    case "$srv" in
        wgetpaste)
            if [ -x /usr/bin/wgetpaste ] ; then
                url=$(wgetpaste $WGETPASTE_OPTIONS 2>/dev/null)
                exitcode=$?
                if [ $exitcode -ne 0 ] ; then
                    msgs+=("$msg1 $srv $msg2 $exitcode.")
                    [ "$verbose" = "yes" ] && echo2 "failed"
                fi
            else
                msgs+=("warning: sorry, package wgetpaste-eos is not installed!")
                exitcode=1
                [ "$verbose" = "yes" ] && echo2 "failed"
            fi
            ;;
        *)
            url=$(curl --fail -Lsm 30 -F "${form}" "$srv"   2>/dev/null)
            exitcode=$?
            if [ $exitcode -ne 0 ] ; then
                msgs+=("$msg1 $srv $msg2 $exitcode.")
                [ "$verbose" = "yes" ] && echo2 "failed"
            fi
            ;;
    esac
    if [ $exitcode -eq 0 ] ; then
        [ "$verbose" = "yes" ] && echo2 "OK"
        return 0   # OK
    else
        [ "$verbose" = "yes" ] && {
            echo2 ""
            printf2 "%s\n" "${msgs[@]}"
        }
        return $exitcode
    fi
}

SendToNet() {
    local exitcode=0
    local ix=$default_ix
    local failed=()

    # try the user default first
    SendToNet1 "$ix" && return

    for ((ix=0; ix < ${#supported_uris[@]}; ix+=2)) ; do
        case "$ix" in
            $default_ix)   # already tested
               ;;
            *) SendToNet1 "$ix" && return
               [ "$verbose" = "no" ] && failed+=("${supported_uris[$ix]}")
               ;;
        esac
        sleep 2
    done
    if [ "$verbose" = "yes" ] ; then
        DIE "sorry, all configured pastebin like services failed!"
    else
        DIE "sorry, all configured pastebin like services ${failed[*]} failed!"
    fi
}

Init() {
    local ix

    [ -r $configfile ] && source $configfile

    EOS_SENDLOG_URI=""  # no more used!

    return

    # set default_ix based on possible EOS_SENDLOG_URI
    if [ -n "$EOS_SENDLOG_URI" ] ; then
        for ((ix=0; ix < ${#supported_uris[@]}; ix+=2)) ; do
            if [ "$EOS_SENDLOG_URI" = "${supported_uris[$ix]}" ] ; then
                default_ix=$ix
                break
            fi
        done
    fi
}

Main_old() {
    local progname="$(basename "$0")"
    local configfile=/etc/eos-sendlog.conf

    local default_ix=0    # was 1

    # 'supported_uris' lists the pastebin like services supported by this app.
    #
    local supported_uris=(   # and forms
        "https://0x0.st"     'file=@-'    # default
        "wgetpaste"          ''           # use another program!
        "http://ix.io"       'f:1=<-'

        # "https://clbin.com"  "clbin=<-"   # has serious problems?
    )
    local EOS_SENDLOG_URI=""
    local WGETPASTE_OPTIONS="--nick nobody"

    # from config file (if values are set, they must be correct!):
    Init

    local save=yes
    local verbose=no
    local inputfile=""
    local db="$HOME/.config/$progname.txt"
    local db2='$HOME'/.config/$progname.txt
    local url

    Options "$@"

    if [ -n "$inputfile" ] ; then
        cat "$inputfile" | SendToNet || return $?  # this line doesn't work...
    else
        SendToNet
    fi

    if [ "$save" = "yes" ] ; then
        local current_db=""
        [ -r "$db" ] && current_db="$(cat "$db")"
        printf "%s: %s\n" "$(date +%Y%m%d-%H%M)" "$url"  > $db
        [ -n "$current_db" ] && echo "$current_db"      >> $db
    fi
    echo "$url"
}

Main() {
    local progname="${0##*/}"
    local logfile="$HOME/$progname.log"

    # pastebin providers
    _0x0.st() { curl -F'file=@-' https://0x0.st ; }
    _ix.io()  { curl -F'f:1=<-'  ix.io | tee -a "$logfile" ; }      # no https at 2023-06-20
    _wgetpaste() {
	if [ ! -x /bin/wgetpaste ] ; then
	    echo "$progname: warning: wgetpaste-eos not installed" >&2
	    return 1
	fi
	local exitcode=0 output
	output=$(echo "$input" | wgetpaste -n anonymous)
	exitcode=$?
	if [ $exitcode -eq 0 ] ; then
	    echo "$output"
	    echo "$(date "+%Y-%m-%d"): $output" >> "$logfile"
	else
	    echo "==> $progname: warning: wgetpaste failed, code $exitcode." >&2
	    return $exitcode
	fi
    }

    # run one of them
    local input=$(cat)
    if [ -z "$input" ] ; then
	echo "==> $progname: warning: nothing to send." >&2
	return 1
    fi
    # echo "$input" | _0x0.st 2>/dev/null && return             # fails at 2023-06-20
    _wgetpaste 2>/dev/null && return
    echo "$input" | _ix.io 2>/dev/null && return
    echo "$progname: warning: configured pastebin sites failed." >&2
}

Main "$@"
